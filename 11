function lab03_3_main
%=== Дисципліна:Основи обробки біомедичної інформації ===
%--- Лабораторна робота #3 ФІЛЬТРАЦІЯ БІОСИГНАЛІВ ФІЛЬТРАМИ З НІХ
%
% Використовуйте файли даних: 
%   ecg105.txt - сигнал ЕКГ
%   ecg2x60.dat - сигнал ЕКГ з мережевою перешкодою частотою 60 Гц
%
%----------------------------------------------------------

clear, clc, close all
disp('Лабораторна робота #3')
disp('ФІЛЬТРАЦІЯ БІОСИГНАЛІВ ФІЛЬТРАМИ З НІХ')
disp('Виконала: Гнатюк Ганна , група 462 ІІДС')


%=== Завдання #1.1 ===
% Синтезування смугового фільтру 2-го порядку 
fs =200;  
fc =20;                             % центральна частота
phi = 2*pi*fc/fs; r=0.6;
b = [1 0 -1];                     % чисельник CФ 
a = [1 -2*r*cos(phi) r.^2]; 	% знаменник
H = filt(b,a);
%=== Завдання #1.2 ===
% АЧХ та ФЧХ смугового фільтру 2-го порядку
n = 512;  % кількість точок, що розраховуються
figure()
[h,f] = freqz(b,a,n,fs);
mag = abs(h);
phase = angle(h)*180/pi;
subplot(2,1,1), plot(f,mag), grid on
... введіть позначення осей графіків
title('АЧХ та ФЧХ смугового фільтру 2-го порядку при r = 0.6'),
xlabel('Частота'), ylabel('Амплітуда')
subplot(2,1,2), plot(f, unwrap(phase)), grid on
xlabel('Частота'), ylabel('Фаза')
...
   

% Обчислення нулів та полюсів фільтру
disp('Нулі смугового фільтру 2-го порядку ') 
nil = roots(b)
disp('Полюси смугового фільтра 2-го порядку')
polus = roots(a)

% Карта нулів та полюсів фільтру
figure()
mnp = zplane(nil, polus);

%=== Завдання #1.3 ===
% r = 0.7
fs = 200; 
fc = 20;                            % центральна частота
phi = 2*pi*fc/fs; 
r1 = 0.7;

b1 = [1 0 -1];                 % чисельник CФ 
a1 =  [1 -2*r1*cos(phi) r1.^2];	% знаменник
H = filt(b1,a1)

n = 512;
figure()
[h1,f1] = freqz(b1,a1,n);
mag1 = abs(h);
phase1 = angle(h)*180/pi;
subplot(2,1,1), plot(f1/(2*pi)*fs,mag1), grid on
... введіть позначення осей графіків
title('АЧХ та ФЧХ смугового фільтру 2-го порядку при r = 0.7'),
xlabel('Частота(Гц)'), ylabel('Амплітуда')
subplot(2,1,2), plot(f1/(2*pi)*fs, unwrap(phase1)), grid on
xlabel('Частота(Гц)'), ylabel('Фаза')

 % Обчислення нулів та полюсів фільтру
disp('Нулі смугового фільтру 2-го порядку при r = 0.7') 
nil = roots(b1)
disp('Полюси смугового фільтра 2-го порядку при r = 0.7')
polus = roots(a1);

 % Карта нулів та полюсів фільтру
figure()
mnp = zplane(nil, polus);
r2 = 0.9
fs = 200; 
fc = 2;                            % центральна частота
phi = 2*pi*fc/fs; r2=0.9;
b2 = [1 0 -1];                       % чисельник CФ 
a2 = [1 -2*r2*cos(phi) r2.^2];
H = filt(b2,a2);% знаменник
% АЧХ та ФЧХ смугового фільтру 2-го порядку
n = 512;  % кількість точок, що розраховуються
figure()
[h2,f2] = freqz(b2,a2,n);
mag2 = abs(h2);
phase2 = angle(h2)*180/pi;
subplot(2,1,1), plot(f2/(2*pi)*fs,mag2), grid on
... введіть позначення осей графіків
title('АЧХ та ФЧХ смугового фільтру 2-го порядку при r = 0.9'),
xlabel('Частота'), ylabel('Амплітуда')
subplot(2,1,2), plot(f2/(2*pi)*fs, unwrap(phase2)), grid on
xlabel('Частота'), ylabel('Фаза')
% Обчислення нулів та полюсів фільтру
disp('Нулі смугового фільтру 2-го порядку при r = 0.9') 
nil = roots(b2);
disp('Полюси смугового фільтра 2-го порядку при r = 0.9')
polus = roots(a2);

 % Карта нулів та полюсів фільтру
figure()
mnp = zplane(nil, polus);

%=== Завдання #1.4 ===
%Визначення добротності заданих фільтрів 
% r=0.6
disp('Добротність для фільтру з коефіцієнтом r=0.6')
f11=14;
f21= 40;
Q1=fc/(f21-f11);
%Добротність Q = 0.769 ( при r=0.6)
%r=0.7
disp('Добротність для фільтру з коефіцієнтом r=0.7')
f22= 41;
f12=14;
Q2=fc/(f21-f11);
%Добротність Q = 0.741 ( при r=0.7)
disp('Добротність для фільтру з коефіцієнтом r=0.9')
f22= 25;
f12=0.6;
Q3=fc/(f21-f11);
%Добротність Q = 0.819 ( при r=0.9)

%=== Завдання #1.5 ===
%Побудува графіків перехідних процесів
n = 512;
figure()
subplot(3,1,1)
stepz(b,a)
ylim([-5 5])
xlim([0 25])
subplot(3,1,2)
stepz(b1,a1)
ylim([-5 5])
xlim([0 25])
subplot(3,1,3)
stepz(b2,a2)
ylim([-5 5])
xlim([0 25])
 
%=== Завдання #2.1 ===
% Фільтрація ЕКГ при r = 0.6
fs = 200;
ecg = load('ecg105.txt')
ecgd = detrend(ecg);
ecgf = filter(b,a,ecg);
t = 100;
%=== Завдання #2.2 ===
% Фільтрація ЕКГ при r = 0.7 та r = 0.8
r = 0.7;
ecgd1 = detrend(ecg)
ecgf1 = filter(b1,a1,ecgd1);
t1 = 100;
r = 0.8
ecgd2 = detrend(ecg)
ecgf2 = filter(b2,a2,ecgd2)
t2 =100
% Графіки результатів фільтрації
figure()

subplot(2,1,1),plot(ecgd),grid on
xlim([-2 400])
ylim([-250 250])
subplot(2,1,2),plot(ecgf),grid on
xlim([-2 400])
ylim([-250 250])
title('r = 0.6');
figure()

subplot(2,1,1),plot(ecgd1),grid on
xlim([-2 400])
ylim([-250 250])
subplot(2,1,2),plot(ecgf1),grid on
xlim([-2 400])
ylim([-250 250])
title('r = 0.7');
figure()

subplot(2,1,1),plot(ecgd2),grid on
xlim([-2 400])
ylim([-250 250])
subplot(2,1,2),plot(ecgf2),grid on
xlim([-2 400])
ylim([-250 250])
title('r = 0.9');

%=== Завдання #3.1 ===
% Дослідження властивостей режекторного НІХ-фільтру
fs=200;
r = 0.8;  
phi1 = 110*pi/180; 
phi2 = 130*pi/180; 
a1 = [1 -2*r*cos(phi1) r.^2]; 
a2 = [1 -2*r*cos(phi2) r.^2];
ar = conv(a1,a2);
br = [1 1 1]/3;
H = filt(br,ar)% передавальна функція
 
 
% %=== Завдання #3.2 ===
% % АЧХ та ФЧХ смугового режекторного НІХ-фільтру
figure()
[h,f] = freqz(br,ar,n);
mag = abs(h);
phase =angle(h)*180/pi ;
subplot(2,1,1), plot(f,mag), grid on
... введіть позначення осей графіків
title('АЧХ та ФЧХ режекторного НІХ-фільтру при r = 0.8'),
xlabel('Частота'), ylabel('Амплітуда')
subplot(2,1,2), plot(f,phase), grid on
xlabel('Частота'), ylabel('Фаза')

disp('Нулі смугового режекторного НІХ-фільтру') 
nil = roots(br)
disp('Полюси смугового режекторного НІХ-фільтру')
polus = roots(ar)

 % Карта нулів та полюсів фільтру
figure()
mnp = zplane(nil, polus);
title('Нулі й полюси режекторного фільтру')

%=== Завдання #3.3 ===
% Порівняння АЧХ і ФЧХ режекторних НІХ і СІХ-фильтрів
figure()
[h,f] = freqz(br,ar,n);
mag = abs(h);
phase =angle(h)*180/pi ;
subplot(2,2,1), plot(f,mag), grid on
title('АЧХ та ФЧХ режекторного НІХ-фільтру при r = 0.8'),
xlabel('Частота'), ylabel('Амплітуда')
subplot(2,2,2), plot(f,phase), grid on
xlabel('Частота'), ylabel('Фаза')
[h1,f1] = freqz(b2,a2,n);
mag1 = abs(h1);
phase1 =angle(h1)*180/pi ;
subplot(2,2,3), plot(f1,mag1), grid on
title('АЧХ та ФЧХ режекторного СІХ-фільтру при r = 0.8'),
xlabel('Частота'), ylabel('Амплітуда')
subplot(2,2,4), plot(f1,phase1), grid on
xlabel('Частота'), ylabel('Фаза')
% %=== Завдання #3.4 ===
% % Фільтрацію сигналу ЕКГ(файл ecg2x60.dat) режекторним фільтром
fs = 200;
ecg = load('ecg2x60.dat');% сигнал ЕКГ
ecgd = detrend(ecg);
ecgfr = filter(br,ar,ecgd);
t = 100;
figure()
fs = 200;
subplot(2,1,1),plot(ecgd),grid on
xlim([-2 200])
ylim([-2 2])
title('До фільтрації');
subplot(2,1,2),plot(ecgfr),grid on
xlim([-2 200])
ylim([-2 2])
title('Після фільтрації');
%=== Завдання #4.1 ===
% АЧХ і ФЧХ цифрових інтеграторів
% Інтегрування методом прямокутників 
fs = 200;           % частота дискретизації
T = 10;
b = [T];            % чисельник ПФ
a = [1 -1];         % знаменник ПФ
% Інтегрування методом трапецій.
b1 = [T T]/2;
a1 = [1 -1];
% Інтегрування методом парабол (Сімпсона)
b2 = [T 4*T T]/3;
a2 = [1 0 -1];
n  = 512;  % кількість точок, що розраховуються
[h,f] = freqz(b,a,n);
mag = abs(h);
phase = angle(h)*180/pi;
[h1,f1] = freqz(b1,a1,n);
mag1 = abs(h1);
phase1 = angle(h1)*180/pi;
[h2,f2] = freqz(b2,a2,n) ;
mag2 = abs(h2);
phase2 = angle(h2)*180/pi;
figure()

subplot(2,1,1), loglog(f,mag), grid on
% ... введіть позначення осей графіків
xlabel('Частота'), ylabel('Амплітуда');

title('Інтегрування методом прямокутників');
subplot(2,1,2), plot(f,unwrap(phase)), grid on
xlabel('Частота'), ylabel('Фаза');

figure()

subplot(2,1,1), loglog(f1,mag1), grid on
% ... введіть позначення осей графіків
xlabel('Частота'), ylabel('Амплітуда');
title('Інтегрування методом трапецій ');
subplot(2,1,2), plot(f1,unwrap(phase1)), grid on
xlabel('Частота'), ylabel('Фаза');
figure()

subplot(2,1,1), loglog(f2,mag2), grid on
% ... введіть позначення осей графіків
xlabel('Частота'), ylabel('Амплітуда');
title('Інтегрування методом парабол (Сімпсона) ');
subplot(2,1,2), plot(f2,unwrap(phase2)), grid on
xlabel('Частота'), ylabel('Фаза');
%=== Завдання #4.2 ===
% Обчислення нулів та полюсів інтеграторів
disp('Нулі інтегратора за методом прямокутників') 
nil = roots(b);
disp(nil)
disp('Полюси інтегратора за методом прямокутників') 
polus = roots(a);
disp(polus) 
% Карта нулів та полюсів фільтру

figure()
mnp = zplane(nil,polus);
title('Нулі інтегратора за методом прямокутників');


disp('Нулі інтегратора за методом трапецій') 
nil1 = roots(b1);
disp(nil1)
disp('Полюси інтегратора за методом трапецій') 
polus1 = roots(a1);
disp(polus1) 
% Карта нулів та полюсів фільтру

figure()
mnp1 = zplane(nil1,polus1);
title('Нулі інтегратора за методом трапецій');

disp('Нулі інтегратора за методом парабол (Сімпсона)') 
nil2 = roots(b2);
disp(nil2)
disp('Полюси інтегратора за методом парабол (Сімпсона)') 
polus2 = roots(a2);
disp(polus2) 
figure()
mnp2 = zplane(nil2,polus2);
title(' Нулі інтегратора за методом парабол ');


%=== Завдання #4.3 ===
% Обчислення абсолютної похибки АЧХ
mag0 = 1./(2*pi*f);         % АЧХ ідеального інтегратора
figure()
loglog(f,mag0,f,mag);
err = (mag-mag0)*100;
figure()
plot(f,err)
loglog(f1,mag0,f1,mag1);    
err1 = (mag1-mag0)*100; 
figure()
plot(f1,err1)
loglog(f2,mag0,f2,mag2);    
err2 = (mag2-mag0)*100;
figure()
plot(f2,err2)
%=== Завдання #4.4 ===
% Інтегрування сигналу ЕКГ (файл ecg105.txt) інтеграторами 
fs = 200;
ecg = load('ecg2x60.dat'); % сигнал ЕКГ
t = 100;
% інтегратор за методом прямокутників
ecgd = detrend(ecg);
ecgf = filter(b,a,ecgd);
% інтегратор за методом трапецій
ecgd1 = detrend(ecg);
ecgf1 = filter(b1,a1,ecgd1);
% інтегратор за методом парабол (Сімпсона)
ecgd2 = detrend(ecg);
ecgf2 = filter(b2,a2,ecgd2);
% Графіки результатів інтегрування
figure()
subplot(2,1,1),plot(ecgd),grid on
xlim([-2 300])
ylim([-2 2])
xlabel('t'), ylabel('Неiнтегрований сигнал')
subplot(2,1,2),plot(ecgf),grid on
xlim([-2 300])
ylim([-200 200])
xlabel('t'), ylabel('Інтегрований сигнал')

figure()
subplot(2,1,1),plot(ecgd1),grid on
xlim([-2 300])
ylim([-2 2])
xlabel('t'), ylabel('Неiнтегрований сигнал')
subplot(2,1,2),plot(ecgf1),grid on
xlim([-2 300])
ylim([-200 200])
xlabel('t'), ylabel('Інтегрований сигнал')

figure()
subplot(2,1,1),plot(ecgd2),grid on
xlim([-2 300])
ylim([-2 2])
xlabel('t'), ylabel('Неiнтегрований сигнал')
subplot(2,1,2),plot(ecgf2),grid on
xlim([-2 300])
ylim([-200 200])
xlabel('t'), ylabel('Інтегрований сигнал')
...
